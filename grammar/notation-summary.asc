Elements of the notation, as described in Frege 1879.

[Changes:
2023-03-28 : CMSMcQ : adopt fa, FF for fraktur (was frak-a or f-a
                      or ..., and frak-F).

2023-03-27 : CMSMcQ : start adding explicit example numbers to match
                      up with exx directory.
]
        
Some of these examples are used in the exx directory; the labels of
the form p00.0 refer to those files (page and example number).

Numbering is for reference.

................................................................
Part I
................................................................

 1. ยง2, p1:  character sequence giving the content of a judgement

    In ixml: tbd.
   
 2. ยง2, p1:  content stroke (horizontal line)

 3. ยง2, p2:  judgement stroke, omission of judgement strok

 4. ยง2, p2:  uppercase Greek letters to represent propositions

    Examples
    p02.1:  yes Alpha.
    p02.2:  maybe Alpha. 

 5. ยง5, p5:  conditional stroke.

    Examples:
    p05.1 yes Alpha if Beta.
    p05.2 maybe Alpha if Beta.

 6. ยง5, p6:  composition of conditionals

    Example:
    p06.4 Alpha if Beta if Gamma.

 7. ยง6, p8:  Inference.

    Example: p08.1
    we have: yes Alpha if Beta
        and: yes Beta
    from which we infer: yes Alpha.

 8. ยง6, p8:  Reference to first premise (conditional):

    Example (assuming X = yes Alpha if Beta):
    p08.3
    we have: yes Beta, from which via (X): we infer: yes Alpha.

 9. ยง6, p8: Reference to second premise (antecedent).

    Example: (assuming XX = yes Beta):
    p08.5
    we have: yes Alpha if Beta,
    from which via (XX):: we infer: yes Alpha.

10. ยง6, p9: Multiple premise references.

    Example (assuming X, XX as above, XXX = yes Gama):
    p09.1
    we have: yes Alpha
                 if Beta
                 if Gamma
    from which via (XXX)::
    we infer:
       yes Alpha if Beta, from which via (XX):: we infer:  yes Alpha.

    Example (short form):
    p09.2
    we have: yes Alpha if Beta if Gamma,
    from which via (XX, XXX):: we infer: yes Alpha.

11. ยง7, p10:  negation stroke.

    Examples:
    p10.1 yes not Alpha.
    p10.2 not Alpha.
    p10.3 yes not Alpha if Beta.
    p10.4 yes Alpha if not Beta.

12. ยง7, pp 12f:  a non-Begriffsschrift example for Alpha and Beta,
    also for not (not Alpha and Beta).

    Not clear how best to represent this.

13. ยง8, p15:  introduction of new notation (equivalence sign)

    Example p15.1:  yes (Alpha โก Beta)
    
    (But cf. ยง24 p. 55, with data capture form 'let us denote Alpha
    with the expression Beta')

14. ยง10, p18:  functional notation

    Examples on p. 18:
    p18.1 Phi(Alpha).
    p18.2 Psi(Alpha, Beta).
    p18.4 yes Phi(Alpha).
    p18.5 yes Psi(Alpha, Beta).

15. ยง11, p19:  universal quantification
    Note that this is currently missing from bgs.ixml.

    Example p19.1:  yes all fa satisfy Phi(fa).

    Or maybe we can know to use Fraktur because of the quantification
    and just write:  yes all a satisfy Phi(a).  [No.  Requires too
    much downstream intelligence.]

    Or just write the Fraktur character correctly.  (Bold shows,
    normal does not. Hmm.)
    
    yes all ๐ satisfy Phi(๐).
    yes all ๐ satisfy Phi(๐).    
    
    Examples p 20.

    p20.1 maybe all fa satisfy Chi(fa)
    p20.2a yes not all fa satisfy Chi(fa)
    p20.2b yes Alpha if all fa satisfy Chi(fa)
    
16. ยง11, p21:  implicit universal quantification for all lower-case
    Latin letters

    ? not sure about where parens should be required / operator precedence.
    [Try the rule:  unary operators bind tight.  No unparenthesized
    conditionals in a unary argument.]

    Examples p 21
    p21.1 yes all fa satisfy (Alpha(fa) if all fe satisfy Beta(fa, fe))
    p21.1bis yes all fa satisfy Alpha(fa) if all fe satisfy Beta(fa, fe)
    p21.1ter yes (all fa satisfy Alpha(fa)) if (all fe satisfy Beta(fa, fe))
    p21.2 yes Chi(a)
    p21.3 yes all fa satisfy Chi(fa)
    p21.4 yes Phi(a) if Alpha
    p21.5 yes (all fa satisfy Phi(fa)) if Alpha
    p21.5x2 yes all fa satisfy Phi(fa) if Alpha // parens need study

................................................................
Part II
................................................................

17. ยง14, p26:  formula numbers (cf. ยง6 p8)

    Examples
    p26.1:  yes a if b if a (=1)
    p26.3: yes a if c if (b if c) if (a if b if c) (= 2)

18. ยง15, p29:  label on explicit premise repeated from earlier

    Example p30.1:
    we have:
       (1=) yes a if c if (b if c) if (a if b if c) if (a if b)
                if (a if c if (b if c) if (a if b if c))
    and:
       (2=) yes a if c if (b if c) if (a if b if c)
    from which we infer:
       yes a if c if (b if c) if (a if b if c) if (a if b) (=3)

19. ยง15, pp 29-31:  substitutions in premise referred to

    Example formula 3, page 29 (p29.1):
    we have:
       (2=) yes a if c if (b if c) if (a if b if c)
    from which
       via (1 [replacing (a with a if c if (b if c) if (a if b if c))
                         (b with a if b)]):
    we infer:
      a if c if (b if c) if (a if b if c) if (a if b) (=3)

    // n.b. there appears to be a typo in (3) on p 29:
    // the conclusion lacks a judgement stroke.

    Substitutions in premise explicitly given
    Example:  formula 6, p. 33 (p33.1):

    we have:
       (5 [replacing (c with d)] =) yes a if d if (b if d) if (a if b)
    from which
       via (5 [replacing (a with a if d if (b if d))
                         (b with a if b)]):
    we infer:
       yes a if d if (b if d) if c if (a if b if c)(=6).

................................................................
Part III
................................................................

20. ยง24, p55:  introduction of new notation (cf. ยง8 p15)

    On p15, the form given uses a single judgement stroke; here, a
    double stroke signals that this is not, strictly speaking, a
    judgement (and thus not a synthetic judgement).  (From his
    description, I take Frege to mean that this is a performative
    utterance.)

    But once asserted the equivalence holds, so when quoted later the
    formula will be given with a single judgement stroke (F says it is
    then an analytic judgement).

    For example see next item.

21. ยง24, p55ff:  new domain-specific notation: property F in
    inherited in the f-series

    The individual parts of the new notation may have some intended
    significance, but Frege does not explain them.  His discussion
    makes clear that there are constraints on the arguments, but he
    does not explain exactly what constraints hold.

    On p58, Frege gives the prose paraphrase "der Umstand, dass die
    Eigenschaft F sich in der f-Reihe vererbt".  From this, we derive
    the data-capture form, which adds the dummy Greek-character
    arguments:
    
    inherited(_P, _f, _D1, _D2, _O)
    
    where _P is the property inherited
          _f is the function which defines the sequence
          _D1 and _D2 are Greek characters which occur in the
              introduced notation as arguments of _f and _P
              and which correspond in the expanded form to
              universally quantified variables which again
              occur as arguments of the two functions.
          _O indicates the order in which _D1 and _D2 appear
              as arguments of f in the short form.  A value of
              1 indicates the form f(_D1, _D2), and 2 indicates
              f(_D2, _D1).  [Perhaps this should just give the
              first argument, with the understanding that the
              other argument is implied.]
              
    From the discussion on p57 it appears that the two dummy arguments
    given as Greek characters can occur in either order as arguments
    of f; hence the necessity of argument _O.

    Example (formula 69, ยง24 p55 [p55.1f69]):
    let us denote:
        all fd satisfy
            ((all fa satisfy (F(fa) if f(fd, fa)))
            if
            F(fd))
    with the expression:
        inherited(F, f, delta, alpha, 1)

    [or alternatively, the last line
    inherited(F, f, delta, alpha, delta)]

    Examples p 58 (corrected)
    p58.2a: inherited(Sigma, Lamda, delta, alpha, 1)
    [or:  inherited(Sigma, Lamda, delta, alpha, delta)]

    p58.2b:
    all fd satisfy
        ((all fa satisfy (Sigma(fa) if Lamda(fd, fa)))
        if Sigma(fd))


    Big example pp 58-59:
    
    we have:
    (69=) yes (all fd satisfy
              (all fa satisfy (F(fa) if f(fd, fa)))
              if F(fd))
              โก
              inherited(F, f, delta, alpha, delta)
    from which via (68 [replacing
                   (fa with fd)
                   (b with inherited(F, f, delta, alpha, delta)
                   (c with x)]):
    we infer:
       yes (all fa satisfy (F(fa) if f(x, fa)))
           if F(x)
           if inherited(F, f, delta, alpha, delta) (=70)
    from which via (19 [replacing
                        (b with all fa satisfy
                                (F(fa) if f(x, fa)))
                        (c with F(x))
                        (d with inherited(F, f, delta, alpha, delta))
                        (a with F(y) if f(x, y))]):
    we infer:
       yes F(y) if f(x, y) if F(x)
           if inherited(F, f, delta, alpha, delta)
           if ((F(y) if f(x, y))
              if (all fa satisfy (F(fa) if f(x, fa)))) (=71)
    from which via (58 [replacing
                       (f(Gamma) with F(Gamma) if f(x, Gamma))
                       (c with y)])::
    we infer: yes F(y)
                  if f(x, y)
                  if F(x)
                  if inherited(F, f, delta, alpha, delta) (=72).

    "Wenn die Eigenschaft F sich in der f-Reihe vererbt; wenn x die
    Eigenschaft F hat und y Ergebnis einer Anwendung des Verfahrens f
    auf x ist: so hat y die Eigenschaft F."

22. ยง26, p60:   new notation:  y follows x in the f-series

    This has a fraction-like figure on the left, where the upper and
    lower values (apparently always Greek letters?) are separated by a
    wavy line not a straight line, followed by an expression with a
    binary functor, whose two arguments are lowercase Latin letters
    (e.g. x and y) subscripted by the two Greek letters in the
    fraction-like subexpression.

    For future reference: the separator between the upper and lower
    Greek letters might conceivably be rendered using U+301C WAVE DASH
    (ใ) or U+3030 (ใฐ).

    Frege explains at a little length why he introduces Greek
    subscripts for x and y in the short form of the expression: he
    apparently wants to avoid unintended variable capture.  I do not
    understand how the subscripts help; it's possible that study of
    formula 94 might help.

    Frege's prose paraphrase for this notation, given a function f and
    variables x and y, is "y folgt in der f-Reihe auf x" or "x geht in
    der f-Reihe dem y vorher".  For transcription, we also need to
    record the Greek letters used in the fraction-like subexpression
    on the left and as subscripts in the reference to f(_, _).  For
    now I propose

      follows-in-seq(_v1, _v2, _f, _dummy1, _dummy2)

      where _v1 and _v2 are variables denoting (potential) elements in
                        a sequence,
            _f is the binary relation (or unary function) which
                        defines the sequence,
            _dummy1 and _dummy2 are the Greek letters used for
                        subscripting
            
    Example ยง26, formula 76, p60:

    let us denote:
        all FF satisfy
            ((FF(y) if all frak-a satisfy
                (FF(frak-a) if f(x, frak-a)))
            if
            inherited(FF, f, delta, alpha, delta))
    with the expression:
        follows-in-seq(x, yยธ f, gamma, beta)

    Example p64 (derivation of formula 82):

    we have:
       (81=) yes F(y)
                 if follows-in-seq(x, y, f, gamma, beta)
                 if inherited(F, f, delta, alpha, delta)
                 if F(x)
    from which via (18 [replacing
                       (a with F(y)
                               if follows-in-seq(x, y, f, gamma, beta))
                       (b with inherited(F, f, delta, alpha, delta))
                       (c with F(x))
                       (d with a)]):
    we infer:
       yes F(y)
           if follows-in-seq(x,y, f, gamma, beta)
           if a
           if inherited(F, f, delta, alpha, delta)
           if (F(x) if a) (=82)

        
23. ยง29, p71:  new notation:  y follows or equals x in f-series

    The notation here is almost exactly like the notation introduced
    in the preceding item, but in the fraction-like subexpression on
    the left the upper and lower Greek letters are separated not just
    by a wavy line but by a horizontal line and a wavy line.  (In a
    way it's like an inverted similar-or-equal symbol โ, something
    like โฉณ, only with a single horizontal line not a double.)

    For future reference: the separator between the upper and lower
    Greek letters might conceivably be rendered using U+301C WAVE DASH
    (ใ) or U+3030 (ใฐ) (as above) plus a horizontal line of some
    kind.

    Example:  formula 99 (ยง29 p71).

    let us denote:
         (z โก x)
         if not follows-in-seq(x,y, f, gamma, beta)
    with the expression:
         follows-or-same(x, y, f, gamma, beta)

    Example: derivation of formula 111, ยง30, p75:

    we have: (108=) follows-or-same(x, y, f, gamma, beta)
    from which
    via (25 [replacing
            (a with follows-or-same(z, v, f, gamma, beta))
            (c with f(y, v))
            (d with follows-or-same(z, y, f, gamma, beta))
            (b with not follows-in-seq(v, z, f, gamma, beta))]):
    we infer:
       follows-or-same(z, v, f, gamma, beta)
       if not (follows-in-seq(v, z, f, gamma, beta))
       if f(y, v)
       if follows-or-same(z, y, f, gamma, beta) (=111)

24. ยง31, p77: new notation: f is unambiguous / f is a function

    The new notation here consists of a capital I with Greek letters
    above and below it, followed by a reference to a binary predicate
    with the two Greek letters in argument positions.  The expanded
    form looks a lot like the standard translation of a definite
    description.
    
    Example (ยง31 p77, formula 115):
    let us denote:
        all fe satisfy
        all fd satisfy
        ((all fa satisfy (fa โก fe) if f(fd, fa))
        if f(fd, fe))
    with the expression:
        unambiguous(f, delta, epsilon) (=115)

    Once again, I don't really understand the bit on the left which
    appears to be introducing the Greek letters, and the mapping from
    the two Greek letters to the three Fraktur letters is not
    completely clear.  I take the mapping to be:

    - Upper Greek letter (delta in the definition) appears as first
      argument and middle scope of the three Fraktur variables.
    - Lower Greek letter (epsilon) appears as second argument.    
    - Two additional Fraktur letters appear with outer and inner
      scopes and as second argument of the references to f.

    

